// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  nickname     String  @unique
  username     String  @unique
  firstName    String
  lastName     String
  email        String  @unique
  pictureLink  String
  accessToken  String
  refreshToken String
  bio          String?
  twoFacAuthSecret  String?
  isTwoFacAuthEnabled Boolean @default(false)
  isTwoFacAuthVerified Boolean @default(false)

  friends Friends[] @relation("friends")
  friendOf Friends[] @relation("friendOf")

  @@unique([id, username, email])
  @@map("users")
}

model Friends {
  id Int @id @default(autoincrement())

  user User @relation("friends",fields: [userId], references: [id])
  userId Int
  friend User @relation("friendOf", fields: [friendId], references: [id])
  friendId Int

  @@map("friends")
}

model Messages {
  id Int @id @default(autoincrement())

  senderId Int
  text String
  
  room Room @relation(fields: [roomId], references: [id])
  roomId Int

  @@map("messages")
}

model Room {
  id Int @id @default(autoincrement())

  name String @unique
  owner Int?
  admins Int[]
  members Int[]
  blocked Int[]
  muteds MutedUser[]
  type String @default("private")
  hash String?

  messages Messages[]

  @@map("room")
}

model MutedUser {
  id Int @id @default(autoincrement())

  room Room @relation(fields: [roomId], references: [id])
  roomId Int
  userId Int
  time String

  @@map("mutedUser")
}
